name: Docker Build & Publish

on:
  push:
    branches: [next]

jobs:
  build:
    name: Build Docker Image and Push to Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          file: dockerfile
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  deploy:
    name: Deploy on Server
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check Out Repository Code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "Generating .env file"

          echo "# Autogenerated .env file" > .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "TCP_PORT=${{ vars.TCP_PORT }}" >> .env
          echo "HOSTNAME=${{ vars.HOSTNAME }}" >> .env
          echo "URL=${{ vars.URL }}" >> .env
          echo "DOCKER_NETWORK=${{ vars.DOCKER_NETWORK }}" >> .env

          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}" >> .env
          echo "OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }}" >> .env

          echo "CONFIG_PATH=/app/config.json" >> .env

      - name: copy files to target server via scp
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_username: ${{ secrets.SSH_PROXY_USER }}
          proxy_key: ${{ secrets.SSH_PROXY_KEY }}
          source: "./docker-compose.yml,./.env,./config.json,./entrypoint.sh"
          target: "/app"

      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@v0.1.5
        env:
          APPTOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ secrets.SSH_USER }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_username: ${{ secrets.SSH_PROXY_USER }}
          proxy_key: ${{ secrets.SSH_PROXY_KEY }}
          envs: APPTOKEN,USERNAME
          script: |
            echo $APPTOKEN | sudo docker login ghcr.io -u $USERNAME --password-stdin
            cd /app
            sudo docker compose -f ./docker-compose.yml pull
            sudo docker compose -f ./docker-compose.yml up -d


